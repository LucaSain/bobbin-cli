use clap::{Arg, App, SubCommand};

pub fn app() -> App<'static, 'static> {
    App::new("bobbin")
        .version("0.1")
        .arg(Arg::with_name("verbose").long("verbose").short("v"))
        .arg(Arg::with_name("quiet").long("quiet").short("q"))
        .arg(Arg::with_name("config").long("config").short("c"))
        .arg(Arg::with_name("device").long("device").short("d").takes_value(true))
        // .arg(Arg::with_name("vendor-id").long("vendor-id").takes_value(true))
        // .arg(Arg::with_name("product-id").long("product-id").takes_value(true))
        // .arg(Arg::with_name("serial-number").long("serial-number").takes_value(true))
        .arg(Arg::with_name("all").long("all"))
        .subcommand(SubCommand::with_name("list"))
        .subcommand(SubCommand::with_name("info"))
        .subcommand(SubCommand::with_name("build")
            .arg(Arg::with_name("target").long("target").takes_value(true))
            .arg(Arg::with_name("bin").long("bin").takes_value(true))
            .arg(Arg::with_name("example").long("example").takes_value(true))
            .arg(Arg::with_name("release").long("release"))
            .arg(Arg::with_name("features").long("features"))
        )
        .subcommand(SubCommand::with_name("load")            
            .arg(Arg::with_name("target").long("target").takes_value(true))
            .arg(Arg::with_name("bin").long("bin").takes_value(true))
            .arg(Arg::with_name("example").long("example").takes_value(true))
            .arg(Arg::with_name("release").long("release"))
            .arg(Arg::with_name("features").long("features"))
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )
        .subcommand(SubCommand::with_name("run")            
            .arg(Arg::with_name("target").long("target").takes_value(true))
            .arg(Arg::with_name("bin").long("bin").takes_value(true))
            .arg(Arg::with_name("example").long("example").takes_value(true))
            .arg(Arg::with_name("release").long("release"))
            .arg(Arg::with_name("features").long("features").takes_value(true))
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )
        .subcommand(SubCommand::with_name("halt"))
        .subcommand(SubCommand::with_name("stop"))
        .subcommand(SubCommand::with_name("continue")
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )
        .subcommand(SubCommand::with_name("start")
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )
        .subcommand(SubCommand::with_name("reset")
            .arg(Arg::with_name("run").long("run"))
            .arg(Arg::with_name("halt").long("halt"))
            .arg(Arg::with_name("init").long("init"))
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )
        .subcommand(SubCommand::with_name("console")
            .arg(Arg::with_name("console").long("console").min_values(0).max_values(1))
        )    
}